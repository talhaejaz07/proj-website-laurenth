---
import { getCollection } from "astro:content";
const stepEntries = await getCollection("steps");

import { colors } from "../data/varianceControl.js";

import { Icon } from "astro-icon";
---

<section>
  <div class="section-wrapper">
    <h2>Siegertreppe</h2>
    <p class="section-text">
      Sieben Schritte, die sowohl analoge als auch digitale Elemente beinhalten.
      Sieben Schritte, die Umsetzungserfolg garantieren.
    </p>
    <div class="steps-wrapper">
      <div id="stepTexts" class="step-texts" data-step="0">
        {
          stepEntries.map((step) => (
            <div class="step-text">
              <h3>{step.data.title}</h3>
              <p>{step.body}</p>
            </div>
          ))
        }
      </div>
      <div
        class="steps"
        style={`grid-template-columns: repeat(${stepEntries.length}, 1fr);`}
      >
        {
          stepEntries.map((step, index) => (
            <div
              style={`grid-row: ${stepEntries.length + 1 - step.data.key}/${
                stepEntries.length + 3 - step.data.key
              }; grid-column: ${step.data.key}/${step.data.key + 1};`}
              class="step-button-wrapper"
            >
              <button
                style={`background-color: ${colors[index + 1]};`}
                class="step-button"
              >
                {step.data.key}
              </button>
              <Icon name="next-stair" class="next-stair" />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  let stepButtons = document.getElementsByClassName("step-button");
  let stepTexts = document.getElementById("stepTexts");

  Object.keys(stepButtons).forEach((key) =>
    stepButtons[key].addEventListener("click", () => {
      stepTexts.setAttribute("data-step", `${key}`);
    })
  );
</script>

<style lang="scss">
  @use "../abstractStyles/" as *;

  section {
    margin: $space-60 0;
    background-color: $primary-200;
  }

  .section-wrapper {
    @include container();

    display: flex;
    flex-direction: column;
    gap: $space-40;

    h2 {
      @include H1();
      text-align: center;
    }

    .section-text {
      @include P();
      text-align: center;
    }
  }

  .steps-wrapper {
    background-color: $light-000;
    padding: $space-60;

    display: flex;
    flex-direction: column-reverse;
    gap: $space-40;
  }

  .steps {
    display: grid;
    gap: $space-tiny;

    .step-button-wrapper {
      position: relative;
    }

    button {
      width: 100%;
      @include H2($light-000);
      border: 0px;
      border-radius: 50px;
      cursor: pointer;
    }
  }

  .next-stair {
    position: absolute;
    width: 100%;
    bottom: -130px;
    left: 80%;
    opacity: 0;
    transition-property: opacity;
    transition-duration: 250ms;

    @include for-tablet-only {
      bottom: -80px;
    }

    @include for-phone-only {
      bottom: -50px;
    }
  }

  .step-button-wrapper:hover .next-stair {
    opacity: 0.75;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="0"]
    + .steps
    .step-button-wrapper:nth-child(1)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="1"]
    + .steps
    .step-button-wrapper:nth-child(2)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="2"]
    + .steps
    .step-button-wrapper:nth-child(3)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="3"]
    + .steps
    .step-button-wrapper:nth-child(4)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="4"]
    + .steps
    .step-button-wrapper:nth-child(5)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="5"]
    + .steps
    .step-button-wrapper:nth-child(6)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .step-texts[data-step="6"]
    + .steps
    .step-button-wrapper:nth-child(6)
    .next-stair {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 250ms;
  }

  .steps .step-button-wrapper:nth-child(7) .next-stair {
    opacity: 0 !important;
  }

  .step-texts {
    display: grid;

    .step-text {
      grid-column: 1/2;
      grid-row: 1/2;

      display: flex;
      flex-direction: column;
      gap: $space-30;

      align-items: center;

      opacity: 0;
      transition-property: opacity;
      transition-duration: 100ms;

      h3 {
        @include H2();
      }

      p {
        @include P();
        text-align: center;

        max-width: 1000px;
      }
    }
  }

  .step-texts[data-step="0"] .step-text:nth-child(1) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }

  .step-texts[data-step="1"] .step-text:nth-child(2) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }

  .step-texts[data-step="2"] .step-text:nth-child(3) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }

  .step-texts[data-step="3"] .step-text:nth-child(4) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }

  .step-texts[data-step="4"] .step-text:nth-child(5) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }

  .step-texts[data-step="5"] .step-text:nth-child(6) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }

  .step-texts[data-step="6"] .step-text:nth-child(7) {
    opacity: 1;
    transition-property: opacity;
    transition-duration: 100ms;
  }
</style>
